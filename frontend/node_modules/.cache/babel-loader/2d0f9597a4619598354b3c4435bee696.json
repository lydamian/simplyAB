{"ast":null,"code":"var _jsxFileName = \"/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/parts/alerts/Alerts.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Alerts.css';\nimport { clearAlert, getAllAlerts } from 'features/alerts/alertsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ALERT_TYPES from '../../features/alerts/ALERT_TYPES'; // import PropTypes from 'prop-types';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = ({\n  id,\n  message,\n  type\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const bulmaBackground = getAlertBackground(type);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: `alert has-text-white ${bulmaBackground}`,\n    children: [message, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"button is-ghost is-pulled-right\",\n      onClick: () => dispatch(clearAlert(id)),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert-close icon is-large\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"has-text-white fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Alert, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Alert;\n\nconst getAlertBackground = alertType => ({\n  [ALERT_TYPES.SUCCESS]: 'has-background-success',\n  [ALERT_TYPES.INFO]: 'has-background-info',\n  [ALERT_TYPES.WARNING]: 'has-background-warning',\n  [ALERT_TYPES.DANGER]: 'has-background-danger'\n})[alertType] || '';\n\nAlert.propTypes = {};\n\nconst Alerts = () => {\n  _s2();\n\n  const alerts = useSelector(getAllAlerts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alerts is-fullwidth rs-fixed rs-w-full rs-z-40\",\n    children: alerts.map(alert => /*#__PURE__*/_jsxDEV(Alert, {\n      id: alert.id,\n      message: alert.message,\n      type: alert.type\n    }, alert.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Alerts, \"do8Z0pkRcuBHTH6TvhV9QAQG8ok=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = Alerts;\nexport default Alerts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Alerts\");","map":{"version":3,"sources":["/Users/damianly/Desktop/Raya/Raya-React-DGDash/react-dg-dash/src/parts/alerts/Alerts.jsx"],"names":["React","clearAlert","getAllAlerts","useDispatch","useSelector","ALERT_TYPES","Alert","id","message","type","dispatch","bulmaBackground","getAlertBackground","alertType","SUCCESS","INFO","WARNING","DANGER","propTypes","Alerts","alerts","map","alert"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,6BAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,mCAAxB,C,CACA;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAAA;;AACvC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,eAAe,GAAGC,kBAAkB,CAACH,IAAD,CAA1C;AAEA,sBACE;AAAK,IAAA,EAAE,EAAEF,EAAT;AAAa,IAAA,SAAS,EAAG,wBAAuBI,eAAgB,EAAhE;AAAA,eACGH,OADH,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iCAAhC;AAAkE,MAAA,OAAO,EAAE,MAAME,QAAQ,CAACT,UAAU,CAACM,EAAD,CAAX,CAAzF;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,2BAAhB;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdD;;GAAMD,K;UACaH,W;;;KADbG,K;;AAgBN,MAAMM,kBAAkB,GAAIC,SAAD,IAAgB;AACzC,GAACR,WAAW,CAACS,OAAb,GAAuB,wBADkB;AAEzC,GAACT,WAAW,CAACU,IAAb,GAAoB,qBAFqB;AAGzC,GAACV,WAAW,CAACW,OAAb,GAAuB,wBAHkB;AAIzC,GAACX,WAAW,CAACY,MAAb,GAAsB;AAJmB,GAKzCJ,SALyC,KAK3B,EALhB;;AAOAP,KAAK,CAACY,SAAN,GAAkB,EAAlB;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGhB,WAAW,CAACF,YAAD,CAA1B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA,cAEIkB,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACT,QAAC,KAAD;AAEE,MAAA,EAAE,EAAEA,KAAK,CAACf,EAFZ;AAGE,MAAA,OAAO,EAAEe,KAAK,CAACd,OAHjB;AAIE,MAAA,IAAI,EAAEc,KAAK,CAACb;AAJd,OACOa,KAAK,CAACf,EADb;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;IAAMY,M;UACWf,W;;;MADXe,M;AAkBN,eAAeA,MAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Alerts.css';\nimport { clearAlert, getAllAlerts } from 'features/alerts/alertsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ALERT_TYPES from '../../features/alerts/ALERT_TYPES';\n// import PropTypes from 'prop-types';\n\nconst Alert = ({ id, message, type }) => {\n  const dispatch = useDispatch();\n  const bulmaBackground = getAlertBackground(type);\n\n  return (\n    <div id={id} className={`alert has-text-white ${bulmaBackground}`}>\n      {message}\n      <button type=\"button\" className=\"button is-ghost is-pulled-right\" onClick={() => dispatch(clearAlert(id))}>\n        <span className=\"alert-close icon is-large\">\n          <i className=\"has-text-white fas fa-times\" />\n        </span>\n      </button>\n    </div>\n  );\n};\n\nconst getAlertBackground = (alertType) => ({\n  [ALERT_TYPES.SUCCESS]: 'has-background-success',\n  [ALERT_TYPES.INFO]: 'has-background-info',\n  [ALERT_TYPES.WARNING]: 'has-background-warning',\n  [ALERT_TYPES.DANGER]: 'has-background-danger',\n}[alertType] || '');\n\nAlert.propTypes = {\n};\n\nconst Alerts = () => {\n  const alerts = useSelector(getAllAlerts);\n  return (\n    <div className=\"alerts is-fullwidth rs-fixed rs-w-full rs-z-40\">\n      {\n        alerts.map((alert) => (\n          <Alert\n            key={alert.id}\n            id={alert.id}\n            message={alert.message}\n            type={alert.type}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\nexport default Alerts;\n"]},"metadata":{},"sourceType":"module"}